---
name: Build Push Cache

on:
  workflow_dispatch: {}
  push:
    paths:
      - "system/**"
      - "home/**"
      - "packages/**"
      - "overlays/**"
      - "flake.lock"
      - "*nix"

jobs:
  define-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - uses: cachix/install-nix-action@a809471b5c7c913aa67bec8f459a11a0decc3fce # v31
      - id: set-matrix
        run: |
          set -Eeu
          matrix="$(nix eval --json '.#ghActions.matrix')"
          echo "matrix=$matrix" >> "$GITHUB_OUTPUT"

  build-push:
    name: ${{ matrix.attrset }}
    needs: define-matrix
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.define-matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - uses: cachix/install-nix-action@a809471b5c7c913aa67bec8f459a11a0decc3fce # v31

      - name: Build derivation
        run: |
          nix build .#${{ matrix.attrset }}

      - name: Install attic
        run: |
          nix profile install nixpkgs#attic-client

      - name: Login to attic-server
        run: |
          attic login local https://cachix.budimanjojo.com "${{ secrets.ATTIC_MAIN_CACHE_TOKEN }}"

      - name: Build and push
        run: |
          nix build .#${{ matrix.attrset }} \
            | attic push main ./result
