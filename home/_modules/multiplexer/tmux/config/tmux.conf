# SERVER OPTIONS
set -g buffer-limit 20 # number of buffers, older than limit buffer will be removed
set -g default-terminal "tmux-256color" # 256 color
set -g escape-time 0 # time for tmux to wait for key sequence
set -ga terminal-features ",*256col*:RGB" # true color support
set -ga terminal-overrides ',*:Smulx=\E[4::%p1%dm' # undercurl support
set -ga terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m' # undercurl colors

# SESSION OPTIONS
set -g base-index 1 # starting index for new window
set -g display-time 0 # time for which status line messages and indicators are displayed in miliseconds, 0 means diplay until a key is pressed
set -g history-limit 10000 # maximum number of lines held in window history
set -g mouse on # enable mouse support
set -g prefix M-a # prefix key is Alt+a
set -g prefix-timeout 0 # disable timeout after prefix key is pressed
set -g renumber-windows on # automatically renumber window when a window is closed
# set -g repeat-time 32767 # typing command without pressing prefix key again in the specified time in miliseconds (can be 200000 after 354926a956ba07ef38d2ddd91a7820e3c9634ab0)
set -g status-keys vi # use vi style keybindings in command prompt

# WINDOW OPTIONS
set -g aggressive-resize on # tmux will resize the window to the size of the smallest or largest session rather than the session it is attached
set -g automatic-rename on # automatic window renaming
set -g automatic-rename-format '#{pane_current_command}' # format of automatic window renaming
set -g mode-keys vi # use vi style keybindings in copy mode
set -g pane-base-index 1 # starting index for new pane

# PANE OPTIONS
set -g allow-rename off # allow programs to change the window name
set -g remain-on-exit off # destroy window when program exits

# KEYBINDING SETTINGS
# Some keybindings below have `switch-client -T prefix` appended to the command. I use it to mimic the behavior of `bind -r`
# so I can repeat commands without typing prefix key again. The problem with using `bind -r` is it doesn't work for bindings that
# doesn't have `-r` flag.
# For example, if I have a key to move to a pane with `-r` flag and a key to kill pane without `-r` flag
# in `prefix` keytable, to move to a pane and kill it I have to:
# Press prefix key, move to a pane, wait for `repeat-time`, press prefix key, kill the pane.
# Now, I can do:
# Press prefix key, move to a pane, kill the pane

# The downside of this approach is I can be stucked in prefix mode forever, what I do is have a key to exit prefix mode which
# I bound to `Esc` and `Space` key

# unbind all the default key bindings
unbind -T root -a
unbind -T prefix -a
unbind -T copy-mode -a
unbind -T copy-mode-vi -a

# root key-table
bind -T root -N "Alt+z to send prefix key to client" M-z send-prefix
bind -T root -N "select pane on mouse click on pane" MouseDown1Pane select-pane -t = \; send-keys -M
bind -T root -N "select window on mouse click on status" MouseDown1Status select-window -t =
bind -T root -N "resize pane on mouse drag on border" MouseDrag1Border resize-pane -M
bind -T root -N "select previous window on mouse wheel up on status" WheelUpStatus previous-window
bind -T root -N "select next window on mouse wheel down on status" WheelDownStatus next-window
bind -T root -N "go into copy mode to scroll history on mouse wheel up on pane" WheelUpPane \
  if-shell -F "#{||:#{pane_in_mode},#{mouse_any_flag}}" { send-keys -M } { copy-mode -e }

# prefix key-table
bind -T prefix -N "h to move to left pane" h select-pane -L \; switch-client -T prefix
bind -T prefix -N "j to move to bottom pane" j select-pane -D \; switch-client -T prefix
bind -T prefix -N "k to move to top pane" k select-pane -U \; switch-client -T prefix
bind -T prefix -N "l to move to right pane" l select-pane -R \; switch-client -T prefix

bind -T prefix -N "H to resize pane to the left by 2 columns" H resize-pane -L 2 \; switch-client -T prefix
bind -T prefix -N "J to resize pane downwards by 2 lines" J resize-pane -D 2 \; switch-client -T prefix
bind -T prefix -N "K to resize pane upwards by 2 lines" K resize-pane -U 2 \; switch-client -T prefix
bind -T prefix -N "L to resize pane to the right by 2 columns" L resize-pane -R 2 \; switch-client -T prefix

bind -T prefix -N "Alt+n to move to next window" M-n next-window \; switch-client -T prefix
bind -T prefix -N "Alt+p to move to previous window" M-p previous-window \; switch-client -T prefix

bind -T prefix -N "> to swap pane with the next pane" > swap-pane -D \; switch-client -T prefix
bind -T prefix -N "< to swap pane with the previous pane" < swap-pane -U \; switch-client -T prefix

bind -T prefix -N "Alt+s to split window horizontally with current pane path" M-s split-window -hc "#{pane_current_path}"
bind -T prefix -N "Alt+v to split window vertically with current pane path" M-v split-window -vc "#{pane_current_path}"
bind -T prefix -N "c to open a new window with current pane path" c new-window -c "#{pane_current_path}"

bind -T prefix -N "Esc to switch to root key table" -r Escape switch-client -T root
bind -T prefix -N "Space to switch to root key table" -r Space switch-client -T root
bind -T prefix -N "a to enter copy mode" a copy-mode
bind -T prefix -N ": to enter tmux command prompt" : command-prompt

bind -T prefix -N "x to close current pane" x kill-pane
bind -T prefix -N "X to close current window" X kill-window

# copy-mode-vi key-table
bind -T copy-mode-vi -N "h to move cursor left" h send-keys -X cursor-left
bind -T copy-mode-vi -N "j to move cursor down" j send-keys -X cursor-down
bind -T copy-mode-vi -N "k to move cursor down" k send-keys -X cursor-up
bind -T copy-mode-vi -N "l to move cursor down" l send-keys -X cursor-right
bind -T copy-mode-vi -N "b to move cursor to word beginning" b send-keys -X previous-word
bind -T copy-mode-vi -N "e to move cursor to word ending" e send-keys -X next-word-end
bind -T copy-mode-vi -N "Home to move cursor to start of line" Home send-keys -X start-of-line
bind -T copy-mode-vi -N "0 to move cursor to start of line" 0 send-keys -X start-of-line
bind -T copy-mode-vi -N "End to move cursor to end of line" End send-keys -X end-of-line
bind -T copy-mode-vi -N "$ to move cursor to end of line" \$ send-keys -X end-of-line
bind -T copy-mode-vi -N "PageUp to move cursor one page up" Npage send-keys -X page-up
bind -T copy-mode-vi -N "PageDn to move cursor one page down" Ppage send-keys -X page-down
bind -T copy-mode-vi -N "g to move cursor to top of history" g send-keys -X history-top
bind -T copy-mode-vi -N "G to move cursor to bottom of history" G send-keys -X history-bottom

bind -T copy-mode-vi -N "Scroll up 5 line on mouse wheel up on pane" WheelUpPane select-pane \; send-keys -X -N 5 scroll-up
bind -T copy-mode-vi -N "Scroll down 5 line on mouse wheel down on pane" WheelDownPane select-pane \; send-keys -X -N 5 scroll-down
bind -T copy-mode-vi -N "Select a line and copy it to clipboard on double click on pane" DoubleClick1Pane \
  select-pane \; send-keys -X select-line \; run-shell -d 0.3 \; send-keys -X copy-pipe-and-cancel
bind -T copy-mode-vi -N "Begin selection on mouse drag on pane" MouseDrag1Pane \
  select-pane \; send-keys -X begin-selection
bind -T copy-mode-vi -N "Copy selection to clipboard on releasing mouse drag on pane" MouseDragEnd1Pane \
  send-key -X copy-pipe-and-cancel

bind -T copy-mode-vi -N "v to begin selection" v send-keys -X begin-selection
bind -T copy-mode-vi -N "Space to begin selection" Space send-keys -X begin-selection
bind -T copy-mode-vi -N "V to select a line" V send-keys -X select-line
bind -T copy-mode-vi -N "Alt+v to toggle box selection" M-v send-keys -X rectangle-toggle
bind -T copy-mode-vi -N "y to copy selection to clipboard" y send-keys -X copy-pipe-and-cancel
bind -T copy-mode-vi -N "Y to copy from cursor to end of line to clipboard" Y send-keys -X copy-pipe-end-of-line-and-cancel

bind -T copy-mode-vi -N "Esc to exit copy mode" Escape send-keys -X cancel
bind -T copy-mode-vi -N "q to exit copy mode" q send-keys -X cancel
